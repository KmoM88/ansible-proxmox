- name: Crear y configurar VM en Proxmox
  hosts: proxmox
  become: yes

  tasks:
  - name: Inicializar Kubernetes control plane
    tags: kubeadm_init
    ansible.builtin.shell: >
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "sudo kubeadm init --pod-network-cidr=10.244.0.0/16" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "mkdir -p /home/{{ ci_user }}/.kube" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "sudo cp -i /etc/kubernetes/admin.conf /home/{{ ci_user }}/.kube/config" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "sudo chown {{ ci_user }}:{{ ci_user }} /home/{{ ci_user }}/.kube/config" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.10/config/manifests/metallb-native.yaml" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "sudo kubeadm token create --print-join-command > join_cmd"

  - name: Leer el comando de join desde el nodo master
    tags: read_join_cmd
    ansible.builtin.shell: >
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "cat /home/{{ ci_user }}/join_cmd" 2>/dev/null | tail -n 1
    register: join_command
    failed_when: join_command.rc != 0

  - name: Ejecutar el comando de join en los nodos workers
    tags: join_workers
    loop: "{{ range(vm_base_id + 1, vm_base_id + total_vm) | list }}"
    loop_control:
      loop_var: vm_id
      label: "Nodo {{ bridge_ip }}.{{ vm_id }}"
    ansible.builtin.shell: >
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_id }} "sudo {{ join_command.stdout }}" &&
      ssh -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }} "kubectl label node vm-{{ vm_id }} node-role.kubernetes.io/worker="
    register: worker_results
    retries: 3
    delay: 5
    until: worker_results is success

  - name: Copy conf from k8s master to local
    tags: copy_conf
    ansible.builtin.shell: >
      scp -o StrictHostKeyChecking=no {{ ci_user }}@{{ bridge_ip }}.{{ vm_base_id }}:/home/{{ ci_user }}/.kube/config /root/config
    register: copy_conf_result
    failed_when: copy_conf_result.rc != 0